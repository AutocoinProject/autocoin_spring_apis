version: '3.8'

services:
  # ====================================
  # Elasticsearch - 로그 저장소
  # ====================================
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
    container_name: autocoin-elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - monitoring
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # ====================================
  # Logstash - 로그 처리 파이프라인
  # ====================================
  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.3
    container_name: autocoin-logstash
    ports:
      - "5044:5044"      # Beats input
      - "5000:5000/tcp"  # TCP input
      - "5000:5000/udp"  # UDP input
      - "9600:9600"      # Logstash monitoring
    volumes:
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
      - ./logstash/patterns:/usr/share/logstash/patterns:ro
    environment:
      - LS_JAVA_OPTS=-Xmx1g -Xms1g
    networks:
      - monitoring
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped

  # ====================================
  # Kibana - 로그 시각화 및 분석
  # ====================================
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.3
    container_name: autocoin-kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.security.enabled=false
    volumes:
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    networks:
      - monitoring
    depends_on:
      - elasticsearch
    restart: unless-stopped

  # ====================================
  # Prometheus - 메트릭 수집
  # ====================================
  prometheus:
    image: prom/prometheus:v2.40.7
    container_name: autocoin-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/rules:/etc/prometheus/rules:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - monitoring
    restart: unless-stopped

  # ====================================
  # Grafana - 메트릭 및 로그 통합 대시보드
  # ====================================
  grafana:
    image: grafana/grafana:10.2.2
    container_name: autocoin-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
      - grafana-data:/var/lib/grafana
    networks:
      - monitoring
    depends_on:
      - prometheus
      - elasticsearch
    restart: unless-stopped

  # ====================================
  # AlertManager - 알림 관리
  # ====================================
  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: autocoin-alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    networks:
      - monitoring
    restart: unless-stopped

  # ====================================
  # Node Exporter - 시스템 메트릭
  # ====================================
  node-exporter:
    image: prom/node-exporter:v1.6.1
    container_name: autocoin-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring
    restart: unless-stopped

  # ====================================
  # ElastAlert2 - 로그 기반 알림
  # ====================================
  elastalert:
    image: jertel/elastalert2:2.15.0
    container_name: autocoin-elastalert
    volumes:
      - ./elastalert/config.yaml:/opt/elastalert/config.yaml:ro
      - ./elastalert/rules:/opt/elastalert/rules:ro
    networks:
      - monitoring
    depends_on:
      - elasticsearch
    restart: unless-stopped

volumes:
  elasticsearch-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  monitoring:
    driver: bridge
